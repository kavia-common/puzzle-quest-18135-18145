{"is_source_file": true, "format": "Kotlin", "description": "This file contains multiple repository classes for managing game-related data such as level progress, achievements, and rewards using the Room database.", "external_files": ["org/example/app/data/db/AchievementDao", "org/example/app/data/db/AchievementEntity", "org/example/app/data/db/GameDatabase", "org/example/app/data/db/LevelProgressDao", "org/example/app/data/db/LevelProgressEntity", "org/example/app/data/db/RewardDao", "org/example/app/data/db/RewardEntity"], "external_methods": ["org.example.app.data.db.GameDatabase.getInstance"], "published": ["LevelProgressRepository", "AchievementRepository", "RewardRepository"], "classes": [{"name": "LevelProgressRepository", "description": "Repository for accessing and updating level progress data, providing Flow and suspend functions."}, {"name": "AchievementRepository", "description": "Repository for managing achievement data, including unlocking and updating achievements."}, {"name": "RewardRepository", "description": "Repository for handling reward data, allowing grants and observation of rewards."}], "methods": [{"name": "observeAll", "description": "Returns a Flow that emits all records from the respective DAO."}, {"name": "upsertProgress", "description": "Updates or inserts a level progress entry with provided details."}, {"name": "getByLevel", "description": "Retrieves the progress of a specific level."}, {"name": "get", "description": "Factory method to obtain an instance of the repository, backed by the singleton database."}, {"name": "unlockOrUpdate", "description": "Unlocks or updates an achievement; modifies progress and unlock timestamp."}, {"name": "grant", "description": "Creates a new reward record with the specified type, amount, and timestamp."}], "calls": ["org.example.app.data.db.GameDatabase.getInstance", "dao.observeAll", "dao.upsertProgress", "dao.getByLevel", "dao.getByCode", "dao.upsert", "dao.insert"], "search-terms": ["Room DAOs", "game achievements", "level progress", "rewards persistence", "game database", "repository pattern", "offline first", "achievement unlock"], "state": 2, "file_id": 20, "knowledge_revision": 99, "git_revision": "", "hash": "31d1d5b3a840e5642ee5e7971d2fcb40", "format-version": 4, "code-base-name": "mobile_game_frontend", "filename": "mobile_game_frontend/app/src/main/kotlin/org/example/app/data/repository/Repositories.kt", "revision_history": [{"99": ""}]}